# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-08 14:19
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ffInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('florafaunaID', models.CharField(max_length=20)),
                ('watershedID', models.CharField(max_length=20)),
                ('isNative', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('photoUrl', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FloraFauna',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('florafaunaID', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('species', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenanceID', models.CharField(max_length=20)),
                ('watershedID', models.CharField(max_length=20)),
                ('date', models.CharField(max_length=20)),
                ('issue', models.CharField(max_length=255)),
                ('cost', models.CharField(max_length=255)),
                ('locationofElement', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ManmadeFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featureID', models.CharField(max_length=20)),
                ('watershedID', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='NaturalFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featureID', models.CharField(max_length=20)),
                ('watershedID', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observationID', models.CharField(max_length=20)),
                ('watershedID', models.CharField(max_length=20)),
                ('sublocation', models.CharField(max_length=255)),
                ('date', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('testType', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Watershed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watershedID', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('percentLand', models.CharField(max_length=20)),
                ('supportsTourism', models.CharField(max_length=20)),
                ('watershedDescription', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
            ],
        ),
    ]
